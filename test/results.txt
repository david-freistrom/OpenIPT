
[0m[0m
[0m  IptBuffer[0m
[0m    IptBuffer(buffer)[0m
[2K[0G    [32m  âœ“[0m[90m should set this.buffer to a given Buffer [0m
[2K[0G    [32m  âœ“[0m[90m should set this.buffer to a given Buffer cleaned by started escape sequence [0m
[2K[0G    [32m  âœ“[0m[90m should set this.offset to 0 [0m
[0m    getLength()[0m
[2K[0G    [32m  âœ“[0m[90m should set length to given buffer size [0m
[2K[0G    [32m  âœ“[0m[90m should set length to MAX_BUFFER_SIZE [0m
[0m    readUInt8String()[0m
[2K[0G    [32m  âœ“[0m[90m should return given string from buffer [0m
[0m    writeUInt8String()[0m
[2K[0G    [32m  âœ“[0m[90m should write a given string to iptBuffer [0m
[0m    readUInt8VarArray()[0m
[2K[0G    [32m  âœ“[0m[90m should return a 15 byte UInt8 Array from buffer [0m
[0m    writeUInt8VarArray()[0m
[2K[0G    [32m  âœ“[0m[90m should write a given 15 byte UInt8 Array to iptBuffer [0m
[0m    readUInt8Array()[0m
[2K[0G    [32m  âœ“[0m[90m should return a 32 byte UInt8 Array from buffer [0m
[0m    writeUInt8Array()[0m
[2K[0G    [32m  âœ“[0m[90m should write a given 32 byte UInt8 Array to iptBuffer [0m
[0m    readUInt8()[0m
[2K[0G    [32m  âœ“[0m[90m should return a UInt8 value from iptBuffer [0m
[0m    writeUInt8()[0m
[2K[0G    [32m  âœ“[0m[90m should write a UInt8 value to iptBuffer [0m
[0m    readUInt16()[0m
[2K[0G    [32m  âœ“[0m[90m should return a LE UInt16 value from iptBuffer [0m
[0m    writeUInt16()[0m
[2K[0G    [32m  âœ“[0m[90m should write a LE UInt16 value to iptBuffer [0m
[0m    readUInt32()[0m
[2K[0G    [32m  âœ“[0m[90m should return a LE UInt32 value from iptBuffer [0m
[0m    writeUInt16()[0m
[2K[0G    [32m  âœ“[0m[90m should write a LE UInt32 value to iptBuffer [0m
[0m    readUInt64()[0m
    [36m  - should return a UInt64 value from iptBuffer[0m
[0m    writeUInt64()[0m
    [36m  - should write a UInt64 value to iptBuffer[0m
[0m    getScrambledBuffer()[0m
[2K[0G    [32m  âœ“[0m[90m should return the scrambled iptBuffer [0m

[0m  MsgDeviceTimeResponse[0m
[0m    getTime() / setTime()[0m
[2K[0G    [32m  âœ“[0m[90m should set and get instance variable time for a valid time value [0m
[2K[0G    [32m  âœ“[0m[90m should throw out of range error for time > 32 bit integer [0m
[2K[0G    [32m  âœ“[0m[90m should throw not an integer error for time as a string [0m
[2K[0G    [32m  âœ“[0m[90m should throw not an positive integer error for time < 0 [0m
[0m    getSize()[0m
[2K[0G    [32m  âœ“[0m[90m should return 4 [0m
[0m    write()[0m
Time: 1
[2K[0G    [32m  âœ“[0m[90m should write UInt32 value 0x00000001 to buffer in Little-Endian [0m
[0m    parse()[0m
[2K[0G    [32m  âœ“[0m[90m should return a MsgDeviceTimeResponse [0m

[0m  MsgConnectionCloseResponse[0m
[0m    getResponse() / setResponse()[0m
[2K[0G    [32m  âœ“[0m[90m should set and get instance variable response for a valid response value [0m
[2K[0G    [32m  âœ“[0m[90m should throw out of range error for response > 8 bit integer [0m
[2K[0G    [32m  âœ“[0m[90m should throw not an integer error for response as a string [0m
[2K[0G    [32m  âœ“[0m[90m should throw not an positive integer error for response < 0 [0m
[2K[0G    [32m  âœ“[0m[90m should throw value not defined error for 0x01 > response > 0x03 [0m
[0m    getSize()[0m
[2K[0G    [32m  âœ“[0m[90m should return 1 [0m
[0m    write()[0m
Response: 1
[2K[0G    [32m  âœ“[0m[90m should write UInt8 value 0x01 to buffer [0m
[0m    parse()[0m
[2K[0G    [32m  âœ“[0m[90m should return a MsgConnectionCloseResponse [0m

[0m  MsgConnectionOpenRequest[0m
[0m    getTargetAddress() / setTargetAddress()[0m
[2K[0G    [32m  âœ“[0m[90m should set and get instance variable targetAddress for a valid value IP [0m
[2K[0G    [32m  âœ“[0m[90m should set and get instance variable targetAddress for a valid value IP:PORT [0m
[2K[0G    [32m  âœ“[0m[90m should set and get instance variable targetAddress for a valid value ans sub address IP:PORT!IP:PORT [0m
[2K[0G    [32m  âœ“[0m[90m should raise a invalid format exception for an invalid IP [0m
[2K[0G    [32m  âœ“[0m[90m should raise a invalid format exception for an integer [0m
[2K[0G    [32m  âœ“[0m[90m should raise a invalid format exception for 127.0.0.1:453454543 [0m
[2K[0G    [32m  âœ“[0m[90m should raise a invalid format exception for 127.0.0.1:wrong [0m
[2K[0G    [32m  âœ“[0m[90m should raise a invalid format exception for 300.0.0.1:12345 [0m
[0m    getSourceAddress() / setSourceAddress()[0m
[2K[0G    [32m  âœ“[0m[90m should set and get instance variable sourceAddress for a valid value IP [0m
[2K[0G    [32m  âœ“[0m[90m should set and get instance variable sourceAddress for a valid value IP:PORT [0m
[2K[0G    [32m  âœ“[0m[90m should set and get instance variable sourceAddress for a valid value ans sub address IP:PORT!IP:PORT [0m
[2K[0G    [32m  âœ“[0m[90m should raise a invalid format exception for an invalid IP [0m
[2K[0G    [32m  âœ“[0m[90m should raise a invalid format exception for an integer [0m
[2K[0G    [32m  âœ“[0m[90m should raise a invalid format exception for 127.0.0.1:453454543 [0m
[2K[0G    [32m  âœ“[0m[90m should raise a invalid format exception for 127.0.0.1:wrong [0m
[2K[0G    [32m  âœ“[0m[90m should raise a invalid format exception for 300.0.0.1:12345 [0m
[0m    getSize()[0m
[2K[0G    [32m  âœ“[0m[90m should return 20 for target and source address [0m
[2K[0G    [32m  âœ“[0m[90m should return 11 for just a source address [0m
[2K[0G    [32m  âœ“[0m[90m should return 10 for just a target address [0m
[0m    write()[0m
[2K[0G    [32m  âœ“[0m[90m should write combined Address to buffer [0m
[2K[0G    [32m  âœ“[0m[90m should write combined Address with ports to buffer [0m
[2K[0G    [32m  âœ“[0m[90m should write combined Address with subaddresses to buffer [0m
[2K[0G    [32m  âœ“[0m[90m should write just source address to buffer [0m
[2K[0G    [32m  âœ“[0m[90m should write just target address to buffer [0m
[2K[0G    [32m  âœ“[0m[90m should raise combined address too long exception for > 62 byte strings [0m
[0m    parse()[0m
[2K[0G    [32m  âœ“[0m[90m should return a MsgConnectionOpenRequest for Target-IP and Source-IP [0m
[2K[0G    [32m  âœ“[0m[90m should return a MsgConnectionOpenRequest for Target-IP:PORT and Source-IP:PORT [0m
[2K[0G    [32m  âœ“[0m[90m should return a MsgConnectionOpenRequest just for Target-IP:PORT [0m
[2K[0G    [32m  âœ“[0m[90m should return a MsgConnectionOpenRequest just for Source-IP:PORT [0m


[92m [0m[32m 62 passing[0m[90m (35ms)[0m
[36m [0m[36m 2 pending[0m

